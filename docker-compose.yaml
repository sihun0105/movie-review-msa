version: '3.7'

services:
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
      args:
        - APP=mysql
    container_name: mysql
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app-network
    restart: 'no'

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP=api-gateway
    container_name: api-gateway
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    networks:
      - app-network
    restart: 'no'
    depends_on:
      - mysql

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP=auth
    container_name: auth-service
    ports:
      - ${AUTH_SERVER_PORT}:${AUTH_SERVER_PORT}
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    networks:
      - app-network
    depends_on:
      - mysql
      - api-gateway
    restart: 'no'
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh mysql:3306 -s -t 100
        node dist/apps/auth/src/main.js

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP=user
    container_name: user-service
    ports:
      - ${USER_SERVER_PORT}:${USER_SERVER_PORT}
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    networks:
      - app-network
    depends_on:
      - mysql
      - api-gateway
    restart: 'no'
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh mysql:3306 -s -t 100
        node dist/apps/user/src/main.js
networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
